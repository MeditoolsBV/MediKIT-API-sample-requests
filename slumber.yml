# For basic usage info, see:
# https://slumber.lucaspickering.me/getting_started.html
# For all collection options, see:
# https://slumber.lucaspickering.me/api/request_collection/index.html

name: MediKIT API Sample Requests

# Profiles are groups of data you can easily switch between. A common usage is
# to define profiles for various environments of a REST service
profiles:
  local:
    name: Local development
    data:
      host: https://dev.api.medikit.nl
      BASE_URL: "{{ host }}/connector/api/v1"
      TENANT_BASE_URL: "{{ BASE_URL }}/{{ env('ORGANIZATION_ID') }}"

requests:
  metadata-folder:
    name: Metadata
    requests:

      search-patients:
        name: Search patients
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient"
        query:
          identifier: http://fhir.nl/fhir/NamingSystem/bsn|{{ prompt(message='Enter the BSN for the patient') }}
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      get-patient:
        name: Get patient
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      search-practitioner-roles:
        name: Search practitioner roles
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/PractitionerRole"
        query:
          specialty: "urn:oid:2.16.840.1.113883.2.4.6.7|{{ prompt(message='Enter the specialty for the practitioner (e.g. 0100)') }}"
          identifier: "http://fhir.nl/fhir/NamingSystem/agb-z|{{ prompt(message='Enter the AGB-Z for the practitioner') }}"
          _include: "PractitionerRole:practitioner"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      get-practitioner-role:
        name: Get practitioner role
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/PractitionerRole/{{ prompt(message='Enter the ID for the practitioner role') }}"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
  
  medical-record-folder:
    name: Medical Record
    requests:

      search-episodes:
        name: Search episodes
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/EpisodeOfCare"
        query:
          _include: "EpisodeOfCare:condition"
          status: active
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      get-episode:
        name: Get episode
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/EpisodeOfCare/{{ prompt(message='Enter the ID for the episode') }}"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      search-allergies:
        name: Search allergies
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/AllergyIntolerance"
        query:
          clinical-status: active
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      get-allergy:
        name: Get allergy
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/AllergyIntolerance/{{ prompt(message='Enter the ID for the allergy') }}"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      search-contraindications:
        name: Search contraindications
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/Flag"
        query:
          status: active
          category: "http://loinc.org|75323-6"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      get-flag:
        name: Get contraindication
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/Flag/{{ prompt(message='Enter the ID for the flag') }}"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

      search-soap:
        name: Search SOAP notes
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/STU3/Patient/{{ env('PATIENT_ID') }}/Composition"
        query:
          code: "http://loinc.org|67781-5"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"

  appointments-folder:
    name: Appointments
    requests:
      appointment-types:
        name: Get appointment types
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/ValueSet/BookableAppointmentType"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
      retrieve-schedules:
        name: Search available Schedules
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Schedule"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
        query:
          service-category: "http://www.medikit.nl/ns/cs/communication-type|DC"
          date:
            - "{{ prompt(message='Date to look for schedules') }}"
            - "ge{{ command(['date', '-v', '+1d', '+%Y-%m-%d']) | trim() }}"
            - "le{{ command(['date', '-v', '+4d', '+%Y-%m-%d']) | trim() }}"
      retrieve-slots:
        name: Search open Slots
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Slot"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
        query:
          service-category: "http://www.medikit.nl/ns/cs/communication-type|DC"
          schedule: "{{ prompt(message='Enter the schedule ID for which to retrieve Slots') }}"
          start:
            - "{{ prompt(message='Date to look for slots') }}"
            - "ge{{ command(['date', '-v', '+1d', '+%Y-%m-%d']) | trim() }}"
            - "le{{ command(['date', '-v', '+4d', '+%Y-%m-%d']) | trim() }}"
      new-appointment:
        name: Schedule a new appointment
        method: POST
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/Appointment/$create"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
        body:
          type: json
          data:
            resourceType: Parameters
            parameter:
              - name: start
                valueDateTime: "{{ prompt(message='Enter the datetime for the appointment') }}"
              - name: schedule
                valueReference:
                  reference: "Schedule/{{ prompt(message='Enter the ID for a Schedule') }}"
              - name: create-as-approved
                valueBoolean: "{{ select([0, 1], message='Should the appointment be created as `approved`?') | boolean() }}"
              - name: comment
                valueString: "{{ prompt(message='Enter a comment for the Appointment') }}"
              

  e-consults-folder:
    name: E-Consultations
    requests:
      new-econsult:
        name: Start new conversation
        method: POST
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/Communication/$new-econsult"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
        body:
          type: json
          data:
            resourceType: Parameters
            parameter:
              - name: message
                valueString: "{{ prompt(message='Enter the body for an E-Consultation question') }}"
              - name: conversation-identifier
                valueIdentifier:
                  system: http://fhir.nl/fhir/NamingSystem/big
                  value: "{{ command(['uuidgen']) | trim() }}"
      add-to-econsult:
        name: Add message to existing conversation
        method: POST
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/Communication/$new-econsult"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
        body:
          type: json
          data:
            resourceType: Parameters
            parameter:
              - name: message
                valueString: "{{ prompt(message='Enter the body for an E-Consultation question') }}"
              - name: conversation-identifier
                valueIdentifier:
                  system: http://fhir.nl/fhir/NamingSystem/big
                  value: "{{ prompt(message='Enter the identifier value for the existing conversation') }}"
      retrieve-econsults:
        name: Retrieve E-Consultations
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/Communication"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
        query:
          encounter:identifier: "http://fhir.nl/fhir/NamingSystem/big|{{ prompt(message='Identifier value for existing conversation') }}"
          encounter:Encounter.code: "https://referentiemodel.nhg.org/tabellen/nhg-tabel-14-contactwijze|12"
          encounter.code: "https://referentiemodel.nhg.org/tabellen/nhg-tabel-14-contactwijze|12"
          encounter: "Encounter/{{ prompt(message='ID for the conversation Encounter') }}"


  repeat-prescription-folder:
    name: Repeat Prescription
    requests:
      get-prescriptions:
        name: Get prescriptions
        method: GET
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/MedicationRequest"
        query:
          _profile: https://meditools.nl/fhir/StructureDefinition/PatientRepeatablePrescription
          code: "urn:oid:2.16.840.1.113883.2.4.4.10|20176"
          date: "ge{{ prompt(message='From which date do you want to search for prescriptions?') }}"
          status: "active,completed"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
      repeat-prescription:
        name: Repeat prescription
        method: POST
        url: "{{ TENANT_BASE_URL }}/fhir/R4/Patient/{{ env('PATIENT_ID') }}/MedicationRequest/{{ prompt(message='Enter the ID for the prescription to repeat') }}/$renew-by-patient"
        body:
          type: json
          data:
            resourceType: Parameters
            parameter:
              - name: effective-period
                valuePeriod:
                  start: "{{ prompt(message='Enter the start date for the effective period') }}"
                  end: "{{ prompt(message='Enter the end date for the effective period') }}"
              - name: comment
                valueString: "{{ prompt(message='Enter a comment for the prescription') }}"
        authentication:
          type: bearer
          token: "{{ command(['python', 'request_token.py']) | trim() | sensitive() }}"
